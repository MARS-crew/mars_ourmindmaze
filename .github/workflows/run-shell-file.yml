name: Run Docker Compose

on:
  push:
    branches:
      - develop

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize Known Hosts
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan ${{ secrets.EC2_HOST_DEV }} >> ~/.ssh/known_hosts

      - name: Set Permissions for Private Key
        run: |
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > $HOME/key.pem
          chmod 400 $HOME/key.pem

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Build Docker image
#        run: docker build --platform linux/arm64 --build-arg DEPENDENCY=build/dependency --no-cache --rm -f Dockerfile -t pinomaker/mars-game:latest .

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/arm64,linux/amd64 -t pinomaker/mars-game:latest-arm64 -t pinomaker/mars-game:latest-amd64 . --push

#      - name: Push Docker image to Docker Hub
#        run: docker push pinomaker/mars-game:latest

      - name: Copy files to EC2 instance
        run: |
          scp -i $HOME/key.pem ./docker-compose.yml ubuntu@${{ secrets.EC2_HOST_DEV }}:/home/ubuntu/
          scp -i $HOME/key.pem ./Dockerfile ubuntu@${{ secrets.EC2_HOST_DEV }}:/home/ubuntu/
          scp -i $HOME/key.pem ./.dockerignore ubuntu@${{ secrets.EC2_HOST_DEV }}:/home/ubuntu/

      - name: Run Docker Compose
        env:
          SSH_PEM_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST_DEV }} "cd /home/ubuntu && DOCKER_CLI_EXPERIMENTAL=enabled docker-compose up -d"