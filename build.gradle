buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'mars'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'mars.temporence.TemporenceApplication'
    }
}

bootJar {
    archiveFileName = 'temporence.jar'
}

repositories {
    mavenCentral()
}

dependencies {
    // ** Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.3.1.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // ** Swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.10'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // ** Querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-apt:5.0.0"

    // ** Firebase
    implementation 'com.google.firebase:firebase-admin:9.1.1'
    implementation 'com.jcraft:jsch:0.1.55'

    // ** JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // ** MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
    // ** MySQL
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

test {
    enabled = true
}

jar {
    enabled = false
}